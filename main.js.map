{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-drawer-container fullscreen>\\n  <mat-drawer mode=\\\"over\\\" [opened]=\\\"opened\\\">\\n    <mat-nav-list>\\n      <mat-list-item>\\n        <a (click)=\\\"newGame()\\\">New game</a>\\n      </mat-list-item>\\n      <mat-list-item *ngFor=\\\"let hra of seznam\\\">\\n        <a (click)=\\\"replayGame(hra)\\\">{{hra.getDate()}}. {{hra.getMonth()}}. {{hra.getFullYear()}} {{hra.getHours()}}:{{hra.getMinutes()}}</a>\\n      </mat-list-item>\\n    </mat-nav-list>\\n  </mat-drawer>\\n  <mat-drawer-content>\\n    <mat-toolbar style=\\\"background-color: rgb(122, 113, 102);\\\">\\n      <button mat-icon-button (click)=\\\"openMenu()\\\">\\n        <mat-icon svgIcon=\\\"menu\\\"></mat-icon>\\n      </button>\\n    </mat-toolbar>\\n    <div *ngIf=\\\"!replay\\\">\\n      <div *ngIf=\\\"!barva\\\">\\n        <button mat-button (click)=\\\"color('SRDCE')\\\" style=\\\"width: 100%; font-size: 6em; color: red; padding: 40px;\\\">\\n          ♥\\n        </button>\\n        <button mat-button (click)=\\\"color('KÁRA')\\\" style=\\\"width: 100%; font-size: 6em; color: red; padding: 40px;\\\">\\n          ♦\\n        </button>\\n        <button mat-button (click)=\\\"color('KŘÍŽE')\\\" style=\\\"width: 100%; font-size: 6em; color: black; padding: 40px;\\\">\\n          ♣\\n        </button>\\n        <button mat-button (click)=\\\"color('PIKY')\\\" style=\\\"width: 100%; font-size: 6em; color: black; padding: 40px;\\\">\\n          ♠\\n        </button>\\n        <button mat-button (click)=\\\"color('TAROKY')\\\" style=\\\"width: 100%; font-size: 4em; color: black; padding: 40px;\\\">\\n          XIX\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='SRDCE'\\\" style=\\\"display: grid; grid-template-columns: auto auto;\\\">\\n        <button mat-button (click)=\\\"value('🂴')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂴\\n        </button>\\n        <button mat-button (click)=\\\"value('🂻')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂻\\n        </button>\\n        <button mat-button (click)=\\\"value('🂳')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂳\\n        </button>\\n        <button mat-button (click)=\\\"value('🂼')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂼\\n        </button>\\n        <button mat-button (click)=\\\"value('🂲')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂲\\n        </button>\\n        <button mat-button (click)=\\\"value('🂽')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂽\\n        </button>\\n        <button mat-button (click)=\\\"value('🂱')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂱\\n        </button>\\n        <button mat-button (click)=\\\"value('🂾')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🂾\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='KÁRA'\\\" style=\\\"display: grid; grid-template-columns: auto auto;\\\">\\n        <button mat-button (click)=\\\"value('🃄')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃄\\n        </button>\\n        <button mat-button (click)=\\\"value('🃋')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃋\\n        </button>\\n        <button mat-button (click)=\\\"value('🃃')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃃\\n        </button>\\n        <button mat-button (click)=\\\"value('🃌')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃌\\n        </button>\\n        <button mat-button (click)=\\\"value('🃂')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃂\\n        </button>\\n        <button mat-button (click)=\\\"value('🃍')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃍\\n        </button>\\n        <button mat-button (click)=\\\"value('🃁')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃁\\n        </button>\\n        <button mat-button (click)=\\\"value('🃎')\\\" style=\\\"font-size: 6em; color: red; margin: 20px; padding: 40px;\\\">\\n          🃎\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='KŘÍŽE'\\\" style=\\\"display: grid; grid-template-columns: auto auto;\\\">\\n        <button mat-button (click)=\\\"value('🃗')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃗\\n        </button>\\n        <button mat-button (click)=\\\"value('🃛')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃛\\n        </button>\\n        <button mat-button (click)=\\\"value('🃘')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃘\\n        </button>\\n        <button mat-button (click)=\\\"value('🃜')\\\" style=\\\"font-size: 6em; color: black;margin: 20px; padding: 40px;\\\">\\n          🃜\\n        </button>\\n        <button mat-button (click)=\\\"value('🃙')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃙\\n        </button>\\n        <button mat-button (click)=\\\"value('🃝')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃝\\n        </button>\\n        <button mat-button (click)=\\\"value('🃚')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🃚\\n        </button>\\n        <button mat-button (click)=\\\"value('🃞')\\\" style=\\\"font-size: 6em; color: black;margin: 20px; padding: 40px;\\\">\\n          🃞\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='PIKY'\\\" style=\\\"display: grid; grid-template-columns: auto auto;\\\">\\n        <button mat-button (click)=\\\"value('🂧')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂧\\n        </button>\\n        <button mat-button (click)=\\\"value('🂫')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂫\\n        </button>\\n        <button mat-button (click)=\\\"value('🂨')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂨\\n        </button>\\n        <button mat-button (click)=\\\"value('🂬')\\\" style=\\\"font-size: 6em; color: black;margin: 20px; padding: 40px;\\\">\\n          🂬\\n        </button>\\n        <button mat-button (click)=\\\"value('🂩')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂩\\n        </button>\\n        <button mat-button (click)=\\\"value('🂭')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂭\\n        </button>\\n        <button mat-button (click)=\\\"value('🂪')\\\" style=\\\"font-size: 6em; color: black; margin: 20px; padding: 40px;\\\">\\n          🂪\\n        </button>\\n        <button mat-button (click)=\\\"value('🂮')\\\" style=\\\"font-size: 6em; color: black;margin: 20px; padding: 40px;\\\">\\n          🂮\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='TAROKY'\\\" style=\\\"display: grid; grid-template-columns: auto auto auto auto;\\\">\\n        <button mat-button (click)=\\\"value('I')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          I\\n        </button>\\n        <button mat-button (click)=\\\"value('II')\\\" style=\\\"font-size: 3em;color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          II\\n        </button>\\n        <button mat-button (click)=\\\"value('III')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          III\\n        </button>\\n        <button mat-button (click)=\\\"value('IV')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          IV\\n        </button>\\n        <button mat-button (click)=\\\"value('V')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          V\\n        </button>\\n        <button mat-button (click)=\\\"value('VI')\\\" style=\\\"font-size: 3em;color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          VI\\n        </button>\\n        <button mat-button (click)=\\\"value('VII')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          VII\\n        </button>\\n        <button mat-button (click)=\\\"value('VIII')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          VIII\\n        </button>\\n        <button mat-button (click)=\\\"value('IX')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          IX\\n        </button>\\n        <button mat-button (click)=\\\"value('X')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          X\\n        </button>\\n        <button mat-button (click)=\\\"value('XI')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XI\\n        </button>\\n        <button mat-button (click)=\\\"value('XII')\\\" style=\\\"font-size: 3em;color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XII\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='TAROKY'\\\" style=\\\"display: grid; grid-template-columns: auto auto auto;\\\">\\n        <button mat-button (click)=\\\"value('XIII')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XIII\\n        </button>\\n        <button mat-button (click)=\\\"value('XIV')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XIV\\n        </button>\\n        <button mat-button (click)=\\\"value('XV')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XV\\n        </button>\\n        <button mat-button (click)=\\\"value('XVI')\\\" style=\\\"font-size: 3em;color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XVI\\n        </button>\\n        <button mat-button (click)=\\\"value('XVII')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XVII\\n        </button>\\n        <button mat-button (click)=\\\"value('XVIII')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XVIII\\n        </button>\\n        <button mat-button (click)=\\\"value('XIX')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XIX\\n        </button>\\n        <button mat-button (click)=\\\"value('XX')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XX\\n        </button>\\n        <button mat-button (click)=\\\"value('XXI')\\\" style=\\\"font-size: 3em; color: black; padding-top: 25px; padding-bottom: 25px;\\\">\\n          XXI\\n        </button>\\n      </div>\\n      <div *ngIf=\\\"barva=='TAROKY'\\\">\\n        <button mat-button (click)=\\\"value('🂿')\\\" style=\\\"width: 100%; font-size: 6em; color: black;padding: 40px;\\\">\\n          🂿\\n        </button>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"replay\\\">\\n      <mat-toolbar>{{date.getDate()}}. {{date.getMonth()}}. {{date.getFullYear()}} {{date.getHours()}}:{{date.getMinutes()}}</mat-toolbar>\\n      <mat-list>\\n        <mat-list-item *ngFor=\\\"let stych of game\\\">\\n          {{stych[0]}} {{stych[1]}} {{stych[2]}} {{stych[3]}}\\n        </mat-list-item>\\n      </mat-list>\\n    </div>\\n  </mat-drawer-content>\\n</mat-drawer-container>\"","import { Component } from '@angular/core';\nimport { MatIconRegistry } from \"@angular/material/icon\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  GAME_LENGTH = 2;\n\n  barva: string = '';\n  hodnota: string = '';\n  karty: string[] = [];\n  stychy = [];\n  seznam: Date[] = [];\n  opened: boolean = false;\n  replay: boolean = false;\n  date: Date;\n  game: any;\n\n  constructor(private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer) {\n    this.matIconRegistry.addSvgIcon(\n      \"menu\",\n      this.domSanitizer.bypassSecurityTrustResourceUrl(\"../assets/baseline-menu-24px.svg\")\n    );\n  }\n\n  color(color: string) {\n    this.barva = color;\n  }\n\n  value(hodnota: string) {\n    this.karty.push(hodnota);\n    if (this.karty.length % 4 === 0) {\n      this.stychy.push(this.karty);\n      if (this.stychy.length % this.GAME_LENGTH === 0) {\n        let now: number = new Date().getTime();\n        localStorage.setItem('' + now, JSON.stringify(this.stychy));\n        let index: string = localStorage.getItem('taroky');\n        if (index) {\n          let indices: number[] = JSON.parse(index);\n          indices.push(now);\n          localStorage.setItem('taroky', JSON.stringify(indices));\n        } else {\n          let indices: number[] = [];\n          indices.push(now);\n          localStorage.setItem('taroky', JSON.stringify(indices));\n        }\n        this.stychy.push(this.karty);\n        this.stychy = [];\n      }\n      this.karty = [];\n    }\n    this.barva = '';\n  }\n\n  newGame() {\n    this.opened = false;\n    this.stychy = [];\n    this.karty = [];\n    this.replay = false;\n  }\n\n  replayGame(date: Date) {\n    this.opened = false;\n    this.replay = true;\n    this.date = date;\n    let data: string = localStorage.getItem('' + date.getTime());\n    if (data) {\n      this.game = JSON.parse(data);\n    }\n  }\n\n  openMenu() {\n    this.opened = !this.opened;\n    let data: string = localStorage.getItem('taroky');\n    if (data) {\n      this.seznam = [];\n      let hry: number[] = JSON.parse(data);\n      for (let hra of hry) {\n        this.seznam.push(new Date(hra));\n      }\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatListModule } from '@angular/material/list';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    HttpClientModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}